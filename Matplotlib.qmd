##  Matplotlib 

Matplotlib is a library designed for plotting and arranging data visually in Python, usually in twodimensional. It was created by Dr. John Hunter in 2003 to enable a MATLAB-like plotting interface in Python
Matplotlib is widely used because of its simplicity and effectiveness.

The library can be installed using either `pip` or `conda`. 

Type "pip install matplotlib" in your terminal

There are several types of graphs such as:
1. Lineplot
2. Barplot
3. Scatterplot
4. 3D plot

Let's start with an simple example:
```{python}
t = range(0, 10)
r = [i**2 for i in t]

plt.figure(figsize=(10, 8)) 
plt.plot(t, r)
plt.title('Line Plot Example')
plt.xlabel('t value')
plt.ylabel('r value')
plt.grid(True)
plt.show()
```

If we need multiple plots together, we can use a subplot shown as follows, here ara an example with the lineplot and the scatter plot.

```{python}
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))

x = np.linspace(0, 10, 100)
y1 = np.sin(x)
y2 = np.cos(x)

# Line plot
ax1.plot(x, y1, 'g', label='sin(x)')
ax1.set_title('Line Plot')
ax1.set_xlabel('x')
ax1.set_ylabel('sin(x)')
ax1.legend()
ax1.grid(True)

# Scatter plot
ax2.scatter(x, y2, c='blue', label='cos(x)', alpha=0.5)
ax2.set_title('Scatter Plot')
ax2.set_xlabel('x')
ax2.set_ylabel('cos(x)')
ax2.legend()
ax2.grid(True)


plt.tight_layout()
plt.show()
```
# bar plot
```{python}
categories = ['Category A', 'Category B', 'Category C']
values = [23, 45, 56]

plt.figure()
plt.bar(categories, values)
plt.title('Bar Plot Example')
plt.xlabel('Categories')
plt.ylabel('Values')
plt.show()
```

# 3D example(
